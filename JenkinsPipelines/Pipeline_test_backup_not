
pipeline {
    agent any
     environment {
          dst_server = "Docker"
          file_name = "*"
          branch_name = "dev"
      }
    stages {
      stage('git') {
              steps {
                  git branch: "${branch_name}", credentialsId: 'GitHub_SSH_key', url: 'git@github.com:Salvadory/MyDefaultWebPage.git'
                  sh 'pwd'
                  sh 'ls -la'
              }
          }  
      stage('Transfer_ssh') {
              steps {
                  sshPublisher(
                      failOnError: true,
                      publishers: [
                         sshPublisherDesc(
                            configName: "${dst_server}",
                            transfers: [
                              sshTransfer(
                                excludes: '',
                                execTimeout: 120000,
                                execCommand: 'sudo service nginx restart', 
                                flatten: false,
                                makeEmptyDirs: false,
                                noDefaultExcludes: false,
                                patternSeparator: '[, ]+',
                                remoteDirectory: '',
                                remoteDirectorySDF: false,
                                removePrefix: '',
                                sourceFiles: "${file_name}")],
                                usePromotionTimestamp: false,
                                useWorkspaceInPromotion: false,
                                verbose: false
                                
                             )
                           ]
                        )
                    } 
                 }
          
          stage('Preparing') {
              steps {
                script {
                    if (env.BRANCH_NAME == 'master') {
                        echo 'I only execute on the master branch'
                    } else {
                        echo 'I execute elsewhere'
                        
                    }
              }
          } 
        } 
          stage('Build') {
              steps {
                 echo 'Build'
                 sh 'pwd'
                 sh 'ls -la'
                 sh 'docker build . -t test100'
                 sh 'docker run -d -p 80:80 -u root -v ${WORKSPACE}:/usr/share/nginx/html:ro test100'
              }
          }
          
          stage('Test') {
              steps {
                  echo 'Testing'
                  sh 'docker ps'
                  sh 'curl localhost:80'
              }
          }
      
  
          stage('Deploy') {
              steps {
                  echo 'Deploying'
              }
          }
      }
  }