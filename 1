- name: Gather facts and filter yum packages
  hosts: "{{ target }}"
  become: yes
  gather_facts: yes
  tasks:
    - name: Gather information about available yum packages
      yum:
        list: available
      register: yum_available

    - name: Gather information about installed yum packages
      yum:
        list: installed
      register: yum_installed

    - name: Filter installed packages
      set_fact:
        filtered_installed_packages: "{{ yum_installed.results | map(attribute='name') | map('regex_replace', '^(.*)$', 'pcp-pmda-\\1') | list | unique }}"

    - name: Filter available packages containing 'pcp-pmda-'
      set_fact:
        filtered_available_packages: "{{ yum_available.results | selectattr('name', 'search', 'pcp-pmda-') | map(attribute='name') | list | unique }}"

    - name: Find available packages for pcp
      set_fact:
        common_substrings: "{{ filtered_available_packages | intersect(filtered_installed_packages) }}"

    - name: Display common substrings as stdout_lines
      debug:
        var: common_substrings
      when: common_substrings | length > 0

    - name: Pause for user input
      pause:
        prompt: "Введите названия приложений для установки, разделенные запятой (,)"
      register: user_input
      timeout: 30
      when: common_substrings | length > 0
      ignore_errors: yes
       
    - name: Install selected pmda packages
      yum:
        name: "{{ user_input.user_input.split(',') }}"
        state: present
      when: user_input.user_input is defined and user_input.user_input | length > 0

    - name: Prepare string packages to agent
      set_fact:
        pmda_agent: >-
          {{
            user_input.user_input.split(',')
            | map('trim')
            | map('regex_replace', '^pcp-pmda-', '')
            | join(',')
          }}
      when: user_input.user_input is defined and user_input.user_input | length > 0

    - name: Print the modified string
      debug:
        msg: "NeedInstall agent:  {{ pmda_agent }}"
      when: user_input.user_input is defined and user_input.user_input | length > 0

    - name: Extract metric collection configuration file content
      command: "cat /etc/pcp/pmcd/pmcd.conf"
      register: pmcd_conf
      changed_when: false
      when: user_input.user_input is defined and user_input.user_input | length > 0

    - name: Ensure optional metric collection agents are enabled
      file:
        path: "/var/lib/pcp/pmdas/{{ item }}/.NeedInstall"
        mode: u=rw,g=r,o=r
        state: touch
      loop: "{{ pmda_agent.split(',') | default([]) }}"
      when: user_input.user_input is defined and user_input.user_input | length > 0 and pmda_agent is defined and pmcd_conf.stdout.find(item) == -1

    - name: Ensure performance metric collector is restarted and enabled on boot
      service:
        name: pmcd
        state: restarted
        enabled: true
